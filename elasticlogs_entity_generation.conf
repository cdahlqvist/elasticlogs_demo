input {
	stdin{}
}

filter {
	grok {
        match => [ "message" , '"%{IPORHOST:clientip}" %{HTTPDUSER} %{USER} \[%{HTTPDATE:timestamp}\] "(?:%{WORD} %{NOTSPACE}(?: HTTP/%{NUMBER})?|%{DATA})" %{NUMBER:response:int} (?:%{NUMBER:bytes:int}|-) %{QUOTEDSTRING} %{QUOTEDSTRING:agent}']
	}

    if "_grokparsefailure" not in [tags] {
        # Create hash based on original IP address and user agent to identify user
        fingerprint {
            source => ["clientip","agent"]
            target => "user_hash"
            method => "MD5"
            key => "test"
            base64encode => true
        }

        # Mask last 8 bytes of IP address
        fingerprint {
            source => "clientip"
            target => "clientip"
            method => "IPV4_NETWORK"
            key => "24"
        }

        mutate {
           remove_field => ["message", "host"]
        }
    } else {
        drop{}
    }
}

output {
    if [user_hash] {
        stdout {
            codec => json_lines
        }
    }
}